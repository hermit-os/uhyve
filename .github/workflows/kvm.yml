name: KVM Tests

on:
  pull_request:
  push:
    branches:
      - master
      - staging
      - trying

jobs:
  kvm:
    name: KVM Tests
    runs-on: [self-hosted]

    steps:
    - uses: hecrj/setup-rust-action@v1
      with: 
         rust-version: nightly
         components: 'rustfmt, clippy'
         targets: 'x86_64-unknown-linux-gnu'
    - uses: actions/checkout@v2.3.4
      with:
         submodules: true
    - name: Check Cargo availability
      run: cargo --version
    - name: Build (debug)
      run:
         cargo build
    - name: Build (release)
      run:
         cargo build --release
    - name: Prepare test environment
      shell: bash
      run: |
         lscpu
         kvm-ok
         cd $GITHUB_WORKSPACE
         cd ..
         rm -rf rusty-hermit
         git clone --recurse-submodules https://github.com/hermitcore/rusty-hermit.git
    - name: KVM tests (debug)
      shell: bash
      run: |
         cd $GITHUB_WORKSPACE
         cd ../rusty-hermit
         cargo build -p rusty_demo
         RUST_LOG=debug $GITHUB_WORKSPACE/target/debug/uhyve -v -c 1 target/x86_64-unknown-hermit/debug/rusty_demo
    - name: KVM tests (release)
      shell: bash
      run: |
         cd $GITHUB_WORKSPACE
         cd ../rusty-hermit
         cargo build -p rusty_demo --release
         RUST_LOG=debug $GITHUB_WORKSPACE/target/release/uhyve -v -c 1 target/x86_64-unknown-hermit/release/rusty_demo

  kernel-tests:
    name: Rusty-Hermit Kernel Tests
    runs-on: [self-hosted]

    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
         rust-version: nightly
         components: 'rustfmt, clippy'
         targets: 'x86_64-unknown-linux-gnu'
    - uses: actions/checkout@v2.3.4
      with:
         submodules: true
    - name: Check Cargo availability
      run: cargo --version
    - name: Integration Tests
      run: cargo test --test '*'
