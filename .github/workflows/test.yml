name: Build and test

on:
  pull_request:
  push:
    branches:
      - master
      - staging
      - trying
  schedule:
    - cron: '0 0 * * 6'

jobs:
  test:
    name: Cargo tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Install toolchain from rust-toolchain.toml
      run: rustup show
    - name: Test
      run: |
         cargo test --lib -- --nocapture --skip test_vm
         cargo test --doc -- --nocapture

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Install toolchain from rust-toolchain.toml
      run: rustup show
    - name: Build
      run: cargo build
    - name: Build with instrument feature
      run: cargo clean && RUSTFLAGS="-Z instrument-mcount" cargo build
    - name: Compile, but don't run benchmarks
      run: cargo bench --no-run

  kernel-tests:
    name: Rusty-Hermit Kernel based integration tests
    runs-on: [self-hosted]
    steps:
    - uses: actions/checkout@v2
    - name: Install toolchain from rust-toolchain.toml
      run: rustup show
    - name: Integration Tests
      run: cargo test --test '*'
    - name: Generate integration test coverage
      run: ./generate_test_coverage.sh --print-coverage
    - name: Generate unit test coverage
      run: |
        #./generate_test_coverage.sh --print-coverage
        bash <(curl -s https://codecov.io/bash) -f
    - uses: codecov/codecov-action@v1
      with:
        files: ./coveralls.json
